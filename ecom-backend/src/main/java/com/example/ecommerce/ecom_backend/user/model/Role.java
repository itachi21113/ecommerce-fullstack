package com.example.ecommerce.ecom_backend.user.model;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

/**
 * Represents a user role in the e-commerce system (e.g., ROLE_USER, ROLE_ADMIN).
 * This class is mapped to the 'roles' table in the database.
 */
@Entity // Marks this class as a JPA entity
@Table(name = "roles") // Maps this entity to the "roles" table
@Data // Lombok annotation to generate getters, setters, equals, hashCode, and toString
@NoArgsConstructor // Lombok annotation to generate a no-argument constructor
@AllArgsConstructor // Lombok annotation to generate a constructor with all fields
@EntityListeners(AuditingEntityListener.class)
public class Role {

    /**
     * Unique identifier for the role.
     * This is the primary key and is auto-generated by the database.
     */
    @Id // Marks this field as the primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Configures auto-generation of primary key by the database
    private Long id;

    /**
     * The name of the role (e.g., "ROLE_USER", "ROLE_ADMIN").
     * Must be unique and not null.
     */
    @Column(nullable = false, unique = true)
    private String name;

    // Lombok handles constructors, getters, and setters.
}
