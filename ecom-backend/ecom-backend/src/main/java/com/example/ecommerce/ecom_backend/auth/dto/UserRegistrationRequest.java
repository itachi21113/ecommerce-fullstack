// src/main/java/com/example/ecommerce/ecom_backend/dto/UserRegistrationRequest.java
package com.example.ecommerce.ecom_backend.auth.dto;

import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;


@Data // Lombok to generate getters, setters, toString, equals, hashCode
@Builder
@AllArgsConstructor
@NoArgsConstructor
public class UserRegistrationRequest {

    @NotBlank(message = "Email cannot be empty")
    @Email(message = "Email should be valid")
    private String email;

    @NotBlank(message = "Password cannot be empty")
    @Size(min = 6, message = "Password must be at least 6 characters long")
    private String password;

    // Username is optional for login, but good for display
    private String username; // Nullable as per your User entity

    @NotBlank(message = "First name cannot be empty")
    private String firstName;

    @NotBlank(message = "Last name cannot be empty")
    private String lastName;

    // No need for 'roles' field here; roles are assigned by the backend upon registration
    // No need for 'id', 'createdAt', 'updatedAt' as these are generated by the backend
}